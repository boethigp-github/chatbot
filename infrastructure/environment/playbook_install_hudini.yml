- name: Deploy Hudini Project
  hosts: localhost
  become: yes
  vars:
    ansible_python_interpreter: /root/anaconda3/envs/hudini/bin/python
    anaconda_path: /root/anaconda3/bin
    project_path: /var/www/hudini
    conda_env_name: hudini
    python_version: "3.10"
    requirements_file: "{{ project_path }}/server/requirements.txt"
    database_name: hudini
    database_user: postgres
    database_password: postgress
    pg_hba_conf_path: /etc/postgresql/{{ ansible_distribution_major_version }}/main/pg_hba.conf

  tasks:
    - name: Display selected Anaconda path and project settings
      debug:
        msg:
          - "Anaconda path: {{ anaconda_path }}"
          - "Project path: {{ project_path }}"
          - "Conda environment name: {{ conda_env_name }}"
          - "Python version: {{ python_version }}"

    - name: Ensure system dependencies are installed
      apt:
        name:
          - python3-dev
          - build-essential
        state: present

    - name: Ensure PostgreSQL is installed
      apt:
        name:
          - postgresql
          - postgresql-contrib
        state: present

    - name: Configure PostgreSQL authentication (pg_hba.conf)
      lineinfile:
        path: "{{ pg_hba_conf_path }}"
        regexp: '^local\s+all\s+postgres\s+peer$'
        line: 'local   all             postgres                                md5'
        backup: yes

    - name: Restart PostgreSQL to apply configuration changes
      service:
        name: postgresql
        state: restarted

    - name: Set PostgreSQL user password
      become_user: postgres
      shell: |
        psql -c "ALTER USER postgres WITH PASSWORD '{{ database_password }}';"
      args:
        executable: /bin/bash

    - name: Ensure PostgreSQL service is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create PostgreSQL database
      postgresql_db:
        name: "{{ database_name }}"
        encoding: UTF-8
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8
        state: present

    - name: Create PostgreSQL user
      postgresql_user:
        name: "{{ database_user }}"
        password: "{{ database_password }}"
        privs: "ALL"
        state: present

    - name: Ensure project directory ownership
      file:
        path: "{{ project_path }}"
        state: directory
        owner: www-data
        group: www-data
        recurse: yes

    - name: Ensure project directory permissions
      file:
        path: "{{ project_path }}"
        state: directory
        mode: "0755"
        recurse: yes
