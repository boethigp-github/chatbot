openapi: 3.0.3
info:
  title: MBMGRACE
  description: |
    Rest API for MBMGRACE
  version: 2.2.9
servers:
  - url: 'https://mbmgrace-test.zeppelin-rental.de'
    description: 'Testumgebung'
  - url: 'https://mbmgrace.zeppelin-rental.de'
    description: 'Produmgebung'
  - url: 'http://#host#/'
    description: 'lokale Maschine'

tags:
  - name: Index
    description: Base-Entrypoint Controller

  - name: AccessToken
    description: Generates AccessToken with username and password

  - name: Swagger Definition
    description: Renders Swagger Routes Html / Yaml

  - name: Stammdaten
    description: Handles Stammdaten sync

  - name: Geraete
    description: Handles Geraete

  - name: Geraete_Erfassungen
    description: Handles Geraete_Erfassungen

  - name: Arbeitsauftraege
    description: Handles Arbeitsauftraege

  - name: Arbeitsauftraege_Resourcen
    description: Handles Arbeitsauftraege_Resourcen

  - name: Taetigkeiten
    description: Handles Taetigkeiten

  - name: Vertriebseinheiten
    description: Handles Vertriebseinheiten

  - name: Vorgaenge
    description: Handles Vorgaenge

  - name: Vorgaenge_Berichte
    description: Handles Vorgaenge_Berichte

  - name: Produktbewegungen
    description: Handles Produktbewegungen

  - name: Arbeitsberichte
    description: Handles Arbeitsberichte

  - name: Werkstattberichte
    description: Handles Werkstattberichte

  - name: Mitarbeiter
    description: Handles Mitarbeiter

  - name: Artikel
    description: Handles Artikel

  - name: Gefahren
    description: Handles Gefahren

  - name: Gefahren Kategorien
    description: Kategories of Gefahren

#    variables:
#      host:
#        enum:
#          - gateway-dev.zeppelin-rental.de
#          - gateway-test.zeppelin-rental.de
#          - gateway.zeppelin-rental.de
#        default: gateway-dev.zeppelin-rental.de



paths:
  '/mbmgrace/v1/stammdaten/sync':
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Gefahren_Kategorien'
      - primary: 'ggek_orgk_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      operationId: SyncGetController::getAction
      summary: 'Stammdaten Sync'
      description: 'Synchronizes and retrieves master data (Stammdaten) for hazard categories. This endpoint allows clients to fetch updated data since their last synchronization.'
      responses:
        '200':
          description: 'Successful response containing the synchronized Stammdaten'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StammdatenSyncGetResponse'
              example:
                status: true

        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Unauthorized'
                message: 'Invalid or missing authentication token'
                code: 401
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Internal Server Error'
                message: 'An unexpected error occurred while processing the request'
                code: 500
      tags:
        - Stammdaten
  '/mbmgrace':
    get:
      security: [ ]
      operationId: SwaggerGetController::root
      summary: 'Index'
      description: 'Retrieves the index page of the mbmgrace application. This endpoint serves as the entry point and provides a basic HTML welcome page.'
      responses:
        '200':
          description: 'Successful response containing the HTML index page'
          content:
            text/html:
              schema:
                type: string
                example: |
                  <!DOCTYPE html>
                  <html lang="en">
                  <head>
                    <meta charset="UTF-8">
                    <meta name="viewport" content="width=device-width, initial-scale=1.0">
                    <title>Welcome to mbmgrace</title>
                    <style>
                      body { font-family: Arial, sans-serif; line-height: 1.6; padding: 20px; }
                      h1 { color: #333; }
                    </style>
                  </head>
                  <body>
                    <h1>Welcome to mbmgrace</h1>
                    <p>This is the index page for the mbmgrace application.</p>
                    <p>Use the navigation menu to access different sections of the application.</p>
                  </body>
                  </html>
        '401':
          description: 'Unauthorized access. This error should not occur as the endpoint has no security requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Unauthorized'
                message: 'Access to this resource is not allowed'
                code: 401
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: 'An unexpected error occurred while processing the request'
                code: 500
      tags:
        - Index
  /mbmgrace/v2/auth/token:
    post:
      security: []
      operationId: AccessTokenGetController::getAction
      x-custom:
        - public: true
      tags:
        - AccessToken
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
      responses:
        '200':
          description: A token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokenResponse'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mbmgrace/docs/swagger:
    get:
      security: [ ]
      operationId: SwaggerController::getAction
      x-custom:
        - public: true
      tags:
        - Swagger Definition
      summary: 'Retrieve Swagger Definition'
      description: 'Fetches the current Swagger definition for the API. This endpoint provides the complete OpenAPI specification, allowing developers to understand and interact with the API.'
      responses:
        '200':
          description: 'Successfully returns the current Swagger definition'
          content:
            application/json:
              schema:
                properties:
                  response:
                    type: string
                    description: 'The complete Swagger definition in JSON format'
              example:
                response: |
                  {
                    "openapi": "3.0.0",
                    "info": {
                      "title": "mbmgrace API",
                      "version": "1.0.0"
                    },
                    "paths": {
                      "/mbmgrace": {
                        "get": {
                          "summary": "Index",
                          "responses": {
                            "200": {
                              "description": "Successful response"
                            }
                          }
                        }
                      },
                      "/mbmgrace/v1/stammdaten/sync": {
                        "get": {
                          "summary": "Stammdaten Sync",
                          "responses": {
                            "200": {
                              "description": "Successful response"
                            }
                          }
                        }
                      }
                    }
                  }
        '401':
          description: 'Unauthorized access. This error should not occur as the endpoint has no security requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Unauthorized'
                message: 'Access to this resource is not allowed'
                code: 401
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Internal Server Error'
                message: 'An unexpected error occurred while processing the request'
                code: 500
  /mbmgrace/docs/swagger/html:
    get:
      security: [ ]
      operationId: SwaggerController::showAction
      x-custom:
        - public: true
      tags:
        - Swagger Definition
      summary: 'Retrieve Swagger Definition as HTML'
      description: 'Fetches the current Swagger definition for the API in HTML format. This endpoint provides a human-readable, interactive documentation of the API, allowing developers to explore and understand the available endpoints.'
      responses:
        '200':
          description: 'Successfully returns the current Swagger definition as HTML'
          content:
            text/html:
              schema:
                type: string
              example: |
                <!DOCTYPE html>
                <html lang="en">
                <head>
                  <meta charset="UTF-8">
                  <title>API Documentation</title>
                  <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/3.52.3/swagger-ui.css">
                </head>
                <body>
                  <div id="swagger-ui"></div>
                  <script src="https://cdnjs.cloudflare.com/ajax/libs/swagger-ui/3.52.3/swagger-ui-bundle.js"></script>
                  <script>
                    window.onload = function() {
                      SwaggerUIBundle({
                        url: "/mbmgrace/docs/swagger",
                        dom_id: '#swagger-ui',
                        presets: [
                          SwaggerUIBundle.presets.apis,
                          SwaggerUIBundle.SwaggerUIStandalonePreset
                        ],
                        layout: "BaseLayout"
                      })
                    }
                  </script>
                </body>
                </html>
        '401':
          description: 'Unauthorized access. This error should not occur as the endpoint has no security requirements.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Unauthorized'
                message: 'Access to this resource is not allowed'
                code: 401
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                error: 'Internal Server Error'
                message: 'An unexpected error occurred while processing the request'
                code: 500
  /mbmgrace/v2/geraete:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Geraete'
      - primary: 'gge_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: GeraeteGetController::getAction
      tags:
        - Geraete
      summary: 'Retrieve list of Geraete (devices)'
      description: 'Fetches a list of all Geraete (devices) available in the system. This endpoint requires authentication using either a Bearer token or an API key.'
      responses:
        '200':
          description: 'Successfully retrieved list of Geraete'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GeraetItem'

        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/geraete/{geraetenummer}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Geraete'
      - primary: 'gge_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: GeraetenummerGetController::getAction
      summary: 'Retrieve a specific Geraet (device) by its geraetenummer'
      description: 'Fetches detailed information about a single Geraet (device) based on its unique geraetenummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete
      parameters:
        - name: geraetenummer
          in: path
          required: true
          description: 'The unique identifier of the Geraet (device)'
          schema:
            type: string
          example: 'GER001'
      responses:
        '200':
          description: 'Successfully retrieved the Geraet object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeraetItem'

        '404':
          description: 'The specified Geraet was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Geraet with geraetenummer GER001 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/geraete_erfassungen/code/{code}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Geraete_Erfassungen'
      - primary: 'ge_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: CodeGetController::getAction
      summary: 'Retrieve a Geraete_Erfassungen by its code'
      description: 'Fetches detailed information about a single Geraete_Erfassungen (device registration) based on its unique code. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: code
          in: path
          required: true
          description: 'The unique code of the Geraete_Erfassungen (QR code or barcode)'
          schema:
            type: string
          example: 'QR123456'
      responses:
        '200':
          description: 'Successfully retrieved the Geraete_Erfassungen object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geraete_ErfassungenItem'
              example:
                id: 1
                geraetenummer: "GER001"
                code: "QR123456"
                typ: "qrcode"
                user: "admin"
                erstellt: "2023-08-06T10:30:00Z"
                bearbeitet: null
        '404':
          description: 'The specified Geraete_Erfassungen was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Geraete_Erfassungen with code QR123456 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/geraete_erfassungen/{geraetenummer}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Geraete_Erfassungen'
      - primary: 'ge_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: ErfassungenGetController::getAction
      summary: 'Retrieve Geraete_Erfassungen by geraetenummer'
      description: 'Fetches a list of Geraete_Erfassungen (device registrations) for a specific geraetenummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: geraetenummer
          in: path
          required: true
          description: 'The unique identifier of the Geraet (device)'
          schema:
            type: string
          example: 'GER001'
      responses:
        '200':
          description: 'Successfully retrieved the list of Geraete_Erfassungen'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Geraete_ErfassungenItem'
              example:
                - id: 1
                  geraetenummer: "GER001"
                  code: "QR123456"
                  typ: "qrcode"
                  user: "admin"
                  erstellt: "2023-08-06T10:30:00Z"
                  bearbeitet: null
                - id: 2
                  geraetenummer: "GER001"
                  code: "BAR789012"
                  typ: "barcode"
                  user: "user1"
                  erstellt: "2023-08-07T14:45:00Z"
                  bearbeitet: "2023-08-07T15:00:00Z"
        '404':
          description: 'No Geraete_Erfassungen found for the specified geraetenummer'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'No Geraete_Erfassungen found for geraetenummer GER001'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: ErfassungenPostController::postAction
      summary: 'Create a new Geraete_Erfassungen'
      description: 'Creates a new Geraete_Erfassungen (device registration) for a specific geraetenummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: geraetenummer
          in: path
          required: true
          description: 'The unique identifier of the Geraet (device)'
          schema:
            type: string
          example: 'GER001'
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Geraete_ErfassungenPostRequest'
            example:
              code: "QR987654"
              typ: "qrcode"
              user: "admin"
      responses:
        '200':
          description: 'Successfully created a new Geraete_Erfassungen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geraete_ErfassungenItem'
              example:
                id: 3
                geraetenummer: "GER001"
                code: "QR987654"
                typ: "qrcode"
                user: "admin"
                erstellt: "2023-08-08T09:00:00Z"
                bearbeitet: null
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/geraete_erfassungen/id/{id}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Geraete_Erfassungen'
      - primary: 'ge_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: IdPatchController::patchAction
      summary: 'Retrieve a Geraete_Erfassungen by ID'
      description: 'Fetches a specific Geraete_Erfassungen (device registration) by its unique ID. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: id
          in: path
          required: true
          description: 'The unique identifier of the Geraete_Erfassungen'
          schema:
            type: integer
            maximum: 9999999
          example: 1
      responses:
        '200':
          description: 'Successfully retrieved the Geraete_Erfassungen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geraete_ErfassungenItem'
              example:
                id: 1
                geraetenummer: "GER001"
                code: "QR123456"
                typ: "qrcode"
                user: "admin"
                erstellt: "2023-08-06T10:30:00Z"
                bearbeitet: null
        '404':
          description: 'The specified Geraete_Erfassungen was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Geraete_Erfassungen with ID 1 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
    patch:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: IdGetController::getAction
      summary: 'Update a Geraete_Erfassungen'
      description: 'Updates an existing Geraete_Erfassungen (device registration) by its ID. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: id
          in: path
          required: true
          description: 'The unique identifier of the Geraete_Erfassungen to update'
          schema:
            type: integer
          example: 1
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Geraete_ErfassungenPatchRequest'
            example:
              geraetenummer: "GER001"
              code: "QR987654"
              typ: "qrcode"
              user: "admin"
      responses:
        '200':
          description: 'Successfully updated the Geraete_Erfassungen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geraete_ErfassungenItem'
              example:
                id: 1
                geraetenummer: "GER001"
                code: "QR987654"
                typ: "qrcode"
                user: "admin"
                erstellt: "2023-08-06T10:30:00Z"
                bearbeitet: "2023-08-08T14:45:00Z"
        '404':
          description: 'The specified Geraete_Erfassungen was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Geraete_Erfassungen with ID 1 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
    delete:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: IdDeleteController::deleteAction
      summary: 'Delete a Geraete_Erfassungen'
      description: 'Deletes a specific Geraete_Erfassungen (device registration) by its ID. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Geraete_Erfassungen
      parameters:
        - name: id
          in: path
          required: true
          description: 'The unique identifier of the Geraete_Erfassungen to delete'
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: 'Successfully deleted the Geraete_Erfassungen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGeraeteErfassungenResponse'
              example:
                success: true
        '404':
          description: 'The specified Geraete_Erfassungen was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Geraete_Erfassungen with ID 1 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/vertriebseinheiten:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Vertriebseinheiten'
      - primary: 'gve_orv_ve'
      - primary_type: 'string'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: VertriebseinheitenGetController::getAction
      summary: 'Retrieve list of Vertriebseinheiten'
      description: 'Fetches a list of all Vertriebseinheiten (sales units) available in the system. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Vertriebseinheiten
      parameters: [ ]
      responses:
        '200':
          description: 'Successfully retrieved the list of Vertriebseinheiten'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VertriebseinheitenItem'
              example:
                - vertriebseinheit: "VE001"
                  bezeichnung: "Vertriebseinheit Nord"
                  lagerortcode: 100001
                  erstellt: "2023-08-01T09:00:00Z"
                  bearbeitet: null
                - vertriebseinheit: "VE002"
                  bezeichnung: "Vertriebseinheit S�d"
                  lagerortcode: 100002
                  erstellt: "2023-08-02T10:30:00Z"
                  bearbeitet: "2023-08-03T14:15:00Z"
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/taetigkeiten:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Taetigkeiten'
      - primary: 'gt_hrt_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: TaetigkeitenGetController::getAction
      summary: 'Retrieve list of Taetigkeiten'
      description: 'Fetches a list of all Taetigkeiten (activities) available in the system. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Taetigkeiten
      responses:
        '200':
          description: 'Successfully retrieved the list of Taetigkeiten'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaetigkeitenItem'
              example:
                - id: 1
                  bezeichnung: "Montage"
                - id: 2
                  bezeichnung: "Wartung"
                - id: 3
                  bezeichnung: "Reparatur"
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsauftraege_ressourcen/{id}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Arbeitsauftraege_Resourcen'
      - primary: 'gaar_sva_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: Arbeitsauftraege_IdGetController::getAction
      summary: 'Retrieve resources for a specific Arbeitsauftrag'
      description: 'Fetches a list of resources (Ressourcen) associated with a specific Arbeitsauftrag (work order) identified by its ID. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Arbeitsauftraege_Resourcen
      parameters:
        - name: id
          in: path
          required: true
          description: 'The unique identifier of the Arbeitsauftrag'
          schema:
            type: integer
          example: 12345
      responses:
        '200':
          description: 'Successfully retrieved the list of resources for the specified Arbeitsauftrag'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArbeitsauftraegeRessource'
              example:
                - auftragsnummer: "AUF-12345"
                  resource:
                    resource_id: 1
                    nummer: 1001
                    workday_id: "WD1001"
                    nachname: "M�ller"
                    vorname: "Hans"
                    email: "hans.mueller@example.com"
                    vertriebseinheit: "VE001"
                    funktion: "Techniker"
                    user: "hmueller"
                    erstellt: "2023-08-01T09:00:00Z"
                    bearbeitet: null
                  erstellt: "2023-08-01T10:00:00Z"
                  bearbeitet: null
                - auftragsnummer: "AUF-12345"
                  resource:
                    resource_id: 2
                    nummer: 1002
                    workday_id: "WD1002"
                    nachname: "Schmidt"
                    vorname: "Anna"
                    email: "anna.schmidt@example.com"
                    vertriebseinheit: "VE002"
                    funktion: "Ingenieur"
                    user: "aschmidt"
                    erstellt: "2023-08-02T09:00:00Z"
                    bearbeitet: "2023-08-03T14:30:00Z"
                  erstellt: "2023-08-02T10:00:00Z"
                  bearbeitet: "2023-08-03T15:00:00Z"
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '404':
          description: 'The specified Arbeitsauftrag was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Arbeitsauftrag with ID 12345 not found'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsauftraege/{auftragsnummer}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Arbeitsauftraege'
      - primary: 'gaa_sva_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: AuftragsnummerGetController::getAction
      summary: 'Retrieve a specific Arbeitsauftrag'
      description: 'Fetches detailed information about a single Arbeitsauftrag (work order) based on its unique auftragsnummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Arbeitsauftraege
      parameters:
        - name: auftragsnummer
          in: path
          required: true
          description: 'The unique identifier of the Arbeitsauftrag'
          schema:
            type: string
          example: "AUF-12345"
      responses:
        '200':
          description: 'Successfully retrieved the Arbeitsauftrag object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arbeitsauftrag'

        '404':
          description: 'The specified Arbeitsauftrag was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Arbeitsauftrag with auftragsnummer AUF-12345 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsauftraege/vertriebseinheit/{vertriebseinheit}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Arbeitsauftraege'
      - primary: 'gaa_sva_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: Vertriebseinheit_VertriebseinheitGetController::getAction
      summary: 'Retrieve Arbeitsauftraege for a specific Vertriebseinheit'
      description: 'Fetches a list of Arbeitsauftraege (work orders) associated with a given Vertriebseinheit (sales unit). This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Arbeitsauftraege
      parameters:
        - name: vertriebseinheit
          in: path
          required: true
          description: 'The unique identifier of the Vertriebseinheit'
          schema:
            type: string
          example: "VE001"
      responses:
        '200':
          description: 'Successfully retrieved Arbeitsauftraege for the specified Vertriebseinheit'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Arbeitsauftrag'

        '404':
          description: 'No Arbeitsauftraege found for the specified Vertriebseinheit'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'No Arbeitsauftraege found for Vertriebseinheit VE001'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsauftraege/auftragsnummer/{auftragsnummer}/status:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Arbeitsauftraege'
      - primary: 'gaa_sva_id'
      - primary_type: 'integer'
      - autoincrement: true
    patch:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: StatusPatchController::patchAction
      summary: 'Update status of a specific Arbeitsauftrag'
      description: 'Updates the status of an Arbeitsauftrag (work order) identified by its auftragsnummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Arbeitsauftraege
      parameters:
        - name: auftragsnummer
          in: path
          required: true
          description: 'The unique identifier of the Arbeitsauftrag'
          schema:
            type: string
          example: "AUF-12345"
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ArbeitsauftraegePatchRequest'
            example:
              status: "RUN"
      responses:
        '200':
          description: 'Successfully updated the Arbeitsauftrag status'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Arbeitsauftrag'

        '404':
          description: 'The specified Arbeitsauftrag was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Arbeitsauftrag with auftragsnummer AUF-12345 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/vorgaenge/vertriebseinheit/{vertriebseinheit}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Vorgaenge'
      - primary: 'gv_mv_vorgang'
      - primary_type: 'string'
      - autoincrement: false
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: VertriebseinheitGetController::getAction
      summary: 'Retrieve Vorgaenge for a specific Vertriebseinheit'
      description: 'Fetches a list of Vorgaenge (processes/cases) associated with a given Vertriebseinheit (sales unit). This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Vorgaenge
      parameters:
        - name: vertriebseinheit
          in: path
          required: true
          description: 'The unique identifier of the Vertriebseinheit'
          schema:
            type: string
          example: "VE001"
      responses:
        '200':
          description: 'Successfully retrieved the list of Vorgaenge for the specified Vertriebseinheit'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VorgaengeItem'

        '404':
          description: 'No Vorgaenge found for the specified Vertriebseinheit'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'No Vorgaenge found for Vertriebseinheit VE001'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/vorgaenge:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Vorgaenge'
      - primary: 'gv_mv_vorgang'
      - primary_type: 'string'
      - autoincrement: false
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:  Vorgaenge_VorgangGetController::getAction
      tags:
        - Vorgaenge

      responses:
        '200':
          description: A List of Vorgaenge object
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VorgaengeItem'
        '404':
          description: Missing entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mbmgrace/v2/vorgaenge/{vorgang}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Vorgaenge'
      - primary: 'gv_mv_vorgang'
      - primary_type: 'string'
      - autoincrement: false
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: VorgangGetController::getAction
      summary: 'Retrieve a specific Vorgang'
      description: 'Fetches detailed information about a single Vorgang (process/case) based on its unique identifier. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Vorgaenge
      parameters:
        - name: vorgang
          in: path
          required: true
          description: 'The unique identifier of the Vorgang'
          schema:
            type: string
          example: "VG-12345"
      responses:
        '200':
          description: 'Successfully retrieved the Vorgang object'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VorgaengeItem'

        '404':
          description: 'The specified Vorgang was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Vorgang with identifier VG-12345 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'

  /mbmgrace/v2/vorgaenge/berichte/{berichtsnummer}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Vorgaenge'
      - primary: 'bv_berichtsnummer'
      - primary_type: 'integer'
      - autoincrement: true
    patch:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: BerichtsnummerPatchController:patchAction
      summary: 'Update a specific Bericht for a Vorgang'
      description: 'Updates the details of a specific Bericht (report) associated with a Vorgang (process/case), identified by its berichtsnummer. This endpoint requires authentication using either a Bearer token or an API key.'
      tags:
        - Vorgaenge_Berichte
      parameters:
        - name: berichtsnummer
          in: path
          required: true
          description: 'The unique identifier of the Bericht to be updated'
          schema:
            type: string
          example: "1001"
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/VorgaengePatchRequest'
            example:
              status: "Abgeschlossen"
              user: "supervisor1"
      responses:
        '200':
          description: 'Successfully updated the Bericht for the Vorgang'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BerichtVorgang'

        '404':
          description: 'The specified Bericht was not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Bericht with berichtsnummer 1001 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/produktbewegungen:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Vorgaenge_Artikelbewegung'
      - primary: 'bvab_id'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: ProduktbewegungenPostController:postAction
      summary: 'Create new Produktbewegungen'
      description: 'Creates new Produktbewegungen (product movements) for Artikel (articles) and Geraete (devices). This endpoint can be used when Auftrags- or Vorgangsnummer do not exist, or for Artikel and Geraete returns and damage reports. Requires authentication using either a Bearer token or an API key.'
      tags:
        - Produktbewegungen
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: 'ID (auftragsnummer or vorgangsnummer). Can be left empty for Artikel and Geraete returns and damage reports.'
          example: "AUF-12345"
        - name: id_type
          in: query
          required: false
          schema:
            type: string
            maxLength: 20
            enum:
              - vorgangsnummer
              - auftragsnummer
          description: "Type of the ID: (auftragsnummer or vorgangsnummer)"
          example: "auftragsnummer"
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ProduktbewegungenPostRequest'

      responses:
        '200':
          description: 'Successfully created Produktbewegungen'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduktbewegungenV2PostResponse'

        '404':
          description: 'Referenced entity not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Referenced Auftrag or Vorgang not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/produktbewegungen/{id}/{id_type}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Vorgaenge_Artikelbewegung'
      - primary: 'bvab_id'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: Produktbewegungen_ProduktbewegungenPostController:postAction
      summary: 'Create new Produktbewegungen for existing Auftrag or Vorgang'
      description: 'Creates new Produktbewegungen (product movements) for Artikel (articles) and Geraete (devices) when Auftrags- or Vorgangsnummer already exist. Requires authentication using either a Bearer token or an API key.'
      tags:
        - Produktbewegungen
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 'ID (auftragsnummer or vorgangsnummer) of the existing Auftrag or Vorgang.'
          example: "AUF-12345"
        - name: id_type
          in: path
          required: true
          schema:
            type: string
            maxLength: 20
            enum:
              - vorgangsnummer
              - auftragsnummer
          description: "Type of the ID: (auftragsnummer or vorgangsnummer)"
          example: "auftragsnummer"
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ProduktbewegungenPostRequest'

      responses:
        '200':
          description: 'Successfully created Produktbewegungen for existing Auftrag or Vorgang'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProduktbewegungenV2PostResponse'

        '404':
          description: 'Specified Auftrag or Vorgang not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Auftrag or Vorgang with ID AUF-12345 not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsberichte:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Vorgaenge_Artikelbewegung'
      - primary: 'bvab_id'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId: ArbeitsberichtePostController:postAction
      summary: 'Create new Arbeitsbericht'
      description: 'Creates a new Arbeitsbericht (work report) when Auftrags- or Vorgangsnummer do not exist. This can also be used for Artikel and Geraete returns and damage reports. Requires authentication using either a Bearer token or an API key.'
      tags:
        - Arbeitsberichte
      parameters:
        - name: id
          in: query
          required: false
          schema:
            type: string
          description: 'ID (auftragsnummer or vorgangsnummer). Can be left empty for Artikel and Geraete returns and damage reports.'
          example: "AUF-12345"
        - name: id_type
          in: query
          required: false
          schema:
            type: string
            maxLength: 20
            enum:
              - vorgangsnummer
              - auftragsnummer
          description: "Type of the ID: (auftragsnummer or vorgangsnummer)"
          example: "auftragsnummer"
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ArbeitsberichtPostRequest'

      responses:
        '200':
          description: 'Successfully created Arbeitsbericht'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArbeitsberichtV2PostResponse'
        '404':
          description: 'Referenced entity not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "404"
                message: 'Referenced entity (e.g., Geraet, Artikel) not found'
        '401':
          description: 'Unauthorized access. The request lacks valid authentication credentials.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "401"
                message: 'Invalid authentication credentials'
        '500':
          description: 'Internal server error. An unexpected condition was encountered on the server.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                code: "500"
                message: 'An unexpected error occurred while processing the request'
  /mbmgrace/v2/arbeitsberichte/{id}/{id_type}:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Vorgaenge_Artikelbewegung' # NUR f�r die Controllergenerierung notwendig. Die generierte Struktur wurde manuell angepasst
      - primary: 'bvab_id'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:  Arbeitsberichte_ArbeitsberichtePostController:postAction
      tags:
        - Arbeitsberichte
      description: Wenn Auftrags- oder Vorgangsnummer existiert
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 'id (auftragsnummer oder vorgangsnummer). Kann leer gelassen werden bei Artikel und Geraete R�cklieferung und Schadensmeldungen'
        - name: id_type
          required: true
          in: path
          schema:
            type: string
            maxLength: 20
            enum:
              - vorgangsnummer
              - auftragsnummer
            description: "Typ der ID: (auftragsnummer oder vorgangsnummer)"

      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ArbeitsberichtPostRequest'
      responses:
        '200':
          description: An Object of Berichte Vorgang
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArbeitsberichtV2PostResponse'
        '404':
          description: Missing entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /mbmgrace/v1/werkstattberichte:
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Bericht_Werkstattbericht'
      - primary: 'bw_berichtsnummer'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:  WerkstattberichtePostController:postAction
      tags:
        - Werkstattberichte


      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/WerkstattberichtPostRequest'
      responses:
        '200':
          description: An Object of Werkstattberichte
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WerkstattberichtV2PostResponse'
        '404':
          description: Missing entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/mbmgrace/v1/mitarbeiter':
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Mitarbeiter'
      - primary: '[gmi_id]'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:   Mitarbeiter_MitarbeiterGetController:getAction
      summary: 'Lese Mitarbeiterliste'



      responses:
        '200':
          description: An Object List of Mitarbeiter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MitarbeiterGetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Mitarbeiter
  '/mbmgrace/v1/mitarbeiter/{mitarbeiternummer}':
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Mitarbeiter'
      - primary: '[gmi_id]'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:  MitarbeiterGetController:getAction
      summary: 'Lese Mitarbeiter by id'
      parameters:

        - name: mitarbeiternummer
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: An Object of Mitarbeiter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MitarbeiterGetResponse'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Mitarbeiter
  '/mbmgrace/v1/artikel':
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Artikel'
      - primary: 'gar_ar_artikel'
      - primary_type: 'integer'
      - autoincrement: true
    post:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:   ArtikelPostController:postAction
      summary: 'Lese Artikelliste'


      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ArtikelFilterRequest'
      responses:
        '200':
          description: An Object List of Artikel
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArtikelPostResponse'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Artikel
  '/mbmgrace/v1/gefahren':
    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Gefahren'
      - primary: 'gge_org_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:   GefahrenGetController:getAction
      summary: 'Lese Gefahren'
      responses:
        '200':
          description: An Object List of Gefahren
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GefahrenGetResponse'

        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - Gefahren
  '/mbmgrace/v1/gefahren/kategorien':

    x-custom:
      - schema: 'Webservices.mbmgrace'
      - table: 'Grace_Gefahren_Kategorien'
      - primary: 'ggek_orgk_id'
      - primary_type: 'integer'
      - autoincrement: true
    get:
      tags:
        - Gefahren Kategorien
      security:
        - BearerAuth: [ ]
        - apikeyAuth: [ ]
      operationId:   KategorienGetControllerTest:getAction
      summary: 'Lese Gefahren'

      responses:
        '200':
          description: An Object List of Gefahren Gefahren Kategorien
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GefahrenKategorienListGetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



components:

  schemas:

    ProduktbewegungenV2PostResponse:
      type: object
      properties:
        geraete_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/geraeteBewegungenPostResponseItem'

        artikel_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/artikelBewegungenPostResponseItem'

        berichtsdaten_result:
          $ref: '#/components/schemas/ProduktbewegungBerichtsdatenPostResponse'
    ArbeitsberichtV2PostResponse:
      required:
        - berichtsdaten_result
        - geraete_result
        - artikel_result
        - mitarbeiter_result
        - gefahrensbeurteilungs_result
        - fotos_result
        - zaehler_result
      type: object
      properties:
        geraete_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/geraeteBewegungenPostResponseItem'
        gefahrensbeurteilungs_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/GefahrensbeurteilungsResultPostResponseItem'

        fotos_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/FotosResultPostResponseItem'
        zaehler_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ZaehlerResultPostResponseItem'
        mitarbeiter_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/MitarbeiterResultPostResponseItem'

        artikel_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/artikelBewegungenPostResponseItem'

        berichtsdaten_result:
          $ref: '#/components/schemas/ArbeitsberichteBerichtsdatenPostResponse'
    WerkstattberichtV2PostResponse:
      type: object
      properties:
        taetigkeiten_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TaetigkeitenResultPostResponseItem'
        mitarbeiter_result:
          type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/WerkstattberichteMitarbeiterResultPostResponseItem'


        berichtsdaten_result:
          $ref: '#/components/schemas/WerkstattberichteBerichtsdatenPostResponse'
    ProduktbewegungBerichtsdatenPostResponse:
      type: object
      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bv_berichtsnummer'
        vorgangsnummer:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_gv_mv_vorgang'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bv_datum'
          example: '2024-01-01'
        de_montage:
          type: integer
          description: 1 = true, 0 = false
          x-custom:
            - db_column: 'bv_de_montage'
        inbetriebnahme:
          type: integer
          x-custom:
            - db_column: 'bv_inbetriebnahme'
          description: 1 = true, 0 = false
        pauschal:
          type: integer
          x-custom:
            - db_column: 'bv_pauschal'
          description: 1 = true, 0 = false
        nachweis:
          type: integer
          description: 1 = true, 0 = false
          x-custom:
            - db_column: 'bv_nachweis'
        status:
          type: string
          maxLength: 15
          x-custom:
            - db_column: 'bv_status'
        status_kunde:
          type: string
          maxLength: 30
          enum:
            - vor Ort
            - nicht vor Ort
            - Unterschrift verweigert
          x-custom:
            - db_column: 'bv_status_kunde'
        text:
          type: string
          x-custom:
            - db_column: 'bv_text'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_bezeichnung'

        adresse:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_adresse'
        rohdaten:
          type: string
          x-custom:
            - db_column: 'bv_rohdaten'
        typ:
          type: string
          x-custom:
            - db_column: 'bv_typ'
          enum:
            - Vorgang
            - Motion
            - Report
        sign:
          type: object
          properties:
            sign_mitarbeiter:
              type: string
              x-custom:
                - db_column: 'bv_sign_mitarbeiter'
            user:
              type: string
              maxLength: 100
              description: 'AD User'
              x-custom:
                - db_column: 'bv_created_by'
            sign_kunde:
              type: string
              x-custom:
                - db_column: 'bv_sign_kunde'
              nullable: true
            kunde_name:
              type: string
              maxLength: 50
              x-custom:
                - db_column: 'bv_sign_kunde_name'
              nullable: true
            kunde_email:
              type: string
              nullable: true
              maxLength: 255
              x-custom:
                - db_column: 'bv_sign_kunde_email'
              description: |
                Validation rule:
                - Email

    WerkstattberichteBerichtsdatenPostResponse:
      type: object
      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bv_berichtsnummer'

        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bv_datum'

        status:
          type: string
          maxLength: 15
          x-custom:
            - db_column: 'bv_status'
        text:
          type: string
          x-custom:
            - db_column: 'bv_text'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_bezeichnung'
        rohdaten:
          type: string
          x-custom:
            - db_column: 'bv_rohdaten'

        sign:
          type: object
          properties:
            sign_mitarbeiter:
              type: string
              x-custom:
                - db_column: 'bv_sign_mitarbeiter'
            user:
              type: string
              maxLength: 100
              description: 'AD User'
              x-custom:
                - db_column: 'bv_created_by'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvab_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvab_updated'
    ArbeitsberichteBerichtsdatenPostResponse:
      type: object
      required:
        - berichtsnummer
        - vorgangsnummer
        - datum
        - status

        - bezeichnung
        - rohdaten
        - sign
        - de_montage
        - inbetriebnahme
        - pauschal
        - nachweis

        - status_kunde
        - text

        - adresse
        - typ

      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bv_berichtsnummer'
        vorgangsnummer:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_gv_mv_vorgang'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bv_datum'
        de_montage:
          type: integer
          description: 1 = true, 0 = false
          x-custom:
            - db_column: 'bv_de_montage'
        inbetriebnahme:
          type: integer
          x-custom:
            - db_column: 'bv_inbetriebnahme'
          description: 1 = true, 0 = false
        pauschal:
          type: integer
          x-custom:
            - db_column: 'bv_pauschal'
          description: 1 = true, 0 = false
        nachweis:
          type: integer
          description: 1 = true, 0 = false
          x-custom:
            - db_column: 'bv_nachweis'
        status:
          type: string
          maxLength: 15
          x-custom:
            - db_column: 'bv_status'
        status_kunde:
          type: string
          maxLength: 30
          enum:
            - vor Ort
            - nicht vor Ort
            - Unterschrift verweigert
          x-custom:
            - db_column: 'bv_status_kunde'
        text:
          type: string
          x-custom:
            - db_column: 'bv_text'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_bezeichnung'

        adresse:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_adresse'
        rohdaten:
          type: string
          x-custom:
            - db_column: 'bv_rohdaten'
        typ:
          type: string
          x-custom:
            - db_column: 'bv_typ'
          enum:
            - Vorgang
            - Motion
            - Report
        sign:
          type: object
          properties:
            sign_mitarbeiter:
              type: string
              x-custom:
                - db_column: 'bv_sign_mitarbeiter'
            user:
              type: string
              maxLength: 100
              description: 'AD User'
              x-custom:
                - db_column: 'bv_created_by'
            sign_kunde:
              type: string
              x-custom:
                - db_column: 'bv_sign_kunde'
              nullable: true
            kunde_name:
              type: string
              maxLength: 50
              x-custom:
                - db_column: 'bv_sign_kunde_name'
              nullable: true
            kunde_email:
              type: string
              nullable: true
              maxLength: 255
              x-custom:
                - db_column: 'bv_sign_kunde_email'
              description: |
                Validation rule:
                - Email
    artikelBewegungenPostResponseItem:
      type: object
      properties:
        id:
          type: string
          x-custom:
            - db_column: 'bvab_id'
        vorgang:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bvab_vorgang'
        auftragsnummer:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bvab_auftragsnummer'
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvab_bv_berichtsnummer'
        artikelnummer:
          type: string
          maxLength: 20
          x-custom:
            - db_column: 'bvab_artikelnummer'
        bewegungsart:
          type: string
          enum:
            - export
            - import
            - losereport
            - 'Keine. Grund: Verbrauchsartikel'
          description: export=Lieferung, import=Ruecklieferung, losereport=Verlustmeldung
          x-custom:
            - db_column: 'bvab_bewegungsart'
        menge:
          type: integer
          x-custom:
            - db_column: 'bvab_menge'
        bemerkung:
          type: string
          nullable: true
          maxLength: 250
          x-custom:
            - db_column: 'bvab_bemerkung'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvab_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvab_updated'
    geraeteBewegungenPostResponseItem:
      type: object
      properties:
        id:
          type: string
          x-custom:
            - db_column: 'bvgb_id'
        vorgang:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bvgb_vorgang'
        auftragsnummer:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bvgb_auftragsnummer'
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvgb_bv_berichtsnummer'
        geraetenummer:
          type: string
          x-custom:
            - db_column: 'bvgb_geraetenummer'
          maxLength: 20
        bewegungsart:
          type: string
          enum:
            - export
            - import
            - losereport
          description: export=Lieferung, import=Ruecklieferung, losereport=Verlustmeldung
          x-custom:
            - db_column: 'bvgb_bewegungsart'
        bemerkung:
          type: string
          maxLength: 250
          x-custom:
            - db_column: 'bvgb_bemerkung'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvgb_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvgb_updated'
    GefahrensbeurteilungsResultPostResponseItem:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'bvg_id'
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvg_bv_berichtsnummer'
        gefahren_id:
          type: integer
          x-custom:
            - db_column: 'bvg_gge_org_id'
        gefahren_kategorie_id:
          type: integer
          x-custom:
            - db_column: 'bvg_ggek_orgk_id'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvg_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvg_updated'
    FotosResultPostResponseItem:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'bvf_id'
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvf_bv_berichtsnummer'
        name:
          type: string
          x-custom:
            - db_column: 'bvf_name'
        datei:
          type: string
          x-custom:
            - db_column: 'bvf_filename'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvf_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'bvf_updated'
    ArtikelPostResponse:
      type: object
      nullable: false
      properties:
        artikelnummer:
          type: string
          maxLength: 25
          x-custom:
            db_column: 'gar_ar_artikel'
            primary_key: true
        geraet:
          type: object
          nullable: true
          allOf:
            -  $ref: '#/components/schemas/GeraetItemSimple'
          x-custom:
            db_column: 'gge_arge_artikel'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Geraete'
              property: 'artikelnummer'
        bezeichnung1:
          type: string
          nullable: true
          x-custom:
            - db_column: 'gar_ar_bez1'
        bezeichnung2:
          type: string
          nullable: true

          x-custom:
            - db_column: 'gar_ar_bez2'
        mengeneinheit:
          type: string
          maxLength: 6
          nullable: false
          x-custom:
            - db_column: 'gar_ar_mengeneinheit'
        art:
          type: string
          x-custom:
            - db_column: 'gar_ar_art'
        erstellt:
          type: string
          x-custom:
            - db_column: 'gar_ar_erstellt'
        bearbeitet:
          type: string
          nullable: true
          x-custom:
            - db_column: 'gar_ar_bearbeitet'
    GefahrenGetResponse:
      type: object
      nullable: false
      properties:
        gefahren_id:
          type: integer
          maximum: 99999999
          x-custom:
            db_column: 'gge_org_id'
            primary_key: true
        bezeichnung:
          type: string
          maxLength: 9999999
          x-custom:
            - db_column: 'gge_org_bezeichnung'
        sort:
          type: integer
          x-custom:
            - db_column: 'gge_org_sort'
        aktiv:
          type: integer
          x-custom:
            - db_column: 'gge_org_aktiv'
        kategorien:
          type: array
          items:
            $ref: '#/components/schemas/GefahrenKategorienGetResponse'
          x-custom:
            primary_key: 'gge_org_id' #Primary key of the reference table [mbmgrace].[Grace_Gefahren_Kategorien]
            db_column: 'ggek_orgk_gefahren_id'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Gefahren_Kategorien'
              property: 'gefahren_id'
        erstellt:
          type: string
          x-custom:
            - db_column: 'gge_created'
        bearbeitet:
          type: string
          nullable: true
          x-custom:
            - db_column: 'gge_updated'
    GefahrenKategorienListGetResponse:
      type: object
      properties:
        id:
          type: integer
          maximum: 99999999
          x-custom:
            primary_key: true
            db_column: 'ggek_orgk_id'

        gefahren:
          type: array
          items:
            $ref: '#/components/schemas/GefahrenGefahrenGetResponse'
          x-custom:
            db_column: 'ggek_orgk_gefahr_id'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Gefahren'
              property: 'gefahren_id'
        bezeichnung:
          type: string
          maxLength: 9999999
          x-custom:
            - db_column: 'ggek_orgk_bezeichnung'
        sort:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_sort'
        aktiv:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_aktiv'
        erstellt:
          type: string
          x-custom:
            - db_column: 'ggek_created'
        bearbeitet:
          type: string
          nullable: true
          x-custom:
            - db_column: 'ggek_updated'
    StammdatenSyncGetResponse:
      type: object
      nullable: false
      properties:
        status:
          type: boolean
    ArtikelFilterRequest:
      type: object
      nullable: false
      required:
        - filter_artikelart
      properties:
        filter_artikelart:
          type: string
          maxLength: 100
          default: '1,2,7,6,12'

    ZaehlerResultPostResponseItem:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'bvz_id'
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvz_bv_berichtsnummer'
        zaehler:
          type: string
          x-custom:
            - db_column: 'bvz_zaehler'
        zaehlerstand:
          type: integer
          x-custom:
            - db_column: 'bvz_zaehlerstand'
        adresse:
          type: string
          maxLength: 1000
          x-custom:
            - db_column: 'bvz_adresse'
        foto:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bvz_foto'
        wandlerfaktor:
          type: string
          x-custom:
            - db_column: 'bvz_wandlerfaktor'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvz_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvz_updated'




    TaetigkeitenResultPostResponseItem:
      type: object
      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bwt_bw_berichtsnummer'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bw_datum'
        taetigkeiten_id:
          type: integer
          x-custom:
            - db_column: 'bwt_gt_hrt_id'
        stunden:
          type: number
          format: float
          x-custom:
            - db_column: 'bwt_stunden'
        ueberstunden:
          type: number
          format: float
          x-custom:
            - db_column: 'bwt_ueberstunden'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'bwt_bwm_gmi_orm_usr_ad'
        vertriebseinheit:
          type: string
          maxLength: 100
          x-custom:
            - db_column: 'bwt_or_ve'
        beschreibung:
          type: string
          maxLength: 9999999
          x-custom:
            - db_column: 'bwt_beschreibung'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bwt_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bwt_updated'
    MitarbeiterResultPostResponseItem:
      type: object
      required:
        - berichtsnummer
        - vertriebseinheit
        - gmi_id
        - datum
        - stunden
        - ueberstunden
        - fahrtzeit
        - kilometer
        - erstellt
        - bearbeitet
      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bvm_berichtsnummer'
        vertriebseinheit:
          type: string
          x-custom:
            - db_column: 'bvm_or_ve'
        gmi_id:
          type: integer
          x-custom:
            - db_column: 'bvm_gmi_id'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvm_datum'
        stunden:
          type: number
          format: float
          maximum: 999
          x-custom:
            - db_column: 'bvm_stunden'
        fahrtzeit:
          type: number
          format: float
          x-custom:
            - db_column: 'bvm_fahrtzeit'
        kilometer:
          type: number
          format: float
          x-custom:
            - db_column: 'bvm_kilometer'
        ueberstunden:
          type: number
          format: float
          x-custom:
            - db_column: 'bvm_ueberstunden'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvm_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bvm_updated'
    WerkstattberichteMitarbeiterResultPostResponseItem:
      type: object
      properties:
        berichtsnummer:
          type: integer
          x-custom:
            - db_column: 'bwm_berichtsnummer'
        vertriebseinheit:
          type: string
          x-custom:
            - db_column: 'bwm_or_ve'
        user:
          type: string
          x-custom:
            - db_column: 'bwm_gmi_orm_usr_ad'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bvm_datum'
        stunden:
          type: number
          format: float
          maximum: 999
          x-custom:
            - db_column: 'bwm_stunden'
        ueberstunden:
          type: number
          format: float
          x-custom:
            - db_column: 'bwm_ueberstunden'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bwm_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'bwm_updated'

    Geraete_ErfassungenPatchRequest:
      type: object
      required: ['geraetenummer', 'user', 'code', 'typ']
      properties:
        geraetenummer:
          type: string
          maxLength: 40
          x-custom:
            - db_column: 'ge_gge_arge_nr'
        code:
          type: string
          description: Code, der mit dem Geraet verknuepft ist.
          x-custom:
            - db_column: 'ge_code'
        typ:
          type: string
          description: barcode oder qrcode
          enum:
            - qrcode
            - barcode
          x-custom:
            - db_column: 'ge_typ'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'ge_user'
    VorgaengePatchRequest:
      type: object
      properties:
        status:
          type: string
          description: Status des Vorgangs
          x-custom:
            - db_column: 'bv_status'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'bv_updated_by'
    ProduktbewegungenPostRequest:
      type: object
      required:
        - geraete
        - artikel
        - berichtsdaten
      properties:
        geraete:
          type: array
          items:
            $ref: '#/components/schemas/VorgaengeGeraeteBewegungenPostRequest'
        artikel:
          type: array
          items:
            $ref: '#/components/schemas/VorgaengeBerichteArtikelBewegungPostRequest'
        berichtsdaten:
          $ref: '#/components/schemas/VorgaengeBerichtePostRequest'
    ArbeitsberichtPostRequest:
      type: object
      required:
        - gefahrensbeurteilung
        - geraete
        - fotos
        - artikel
        - zaehler
        - mitarbeiter
        - berichtsdaten
      properties:
        gefahrensbeurteilung:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/GefahrensbeurteilungenBewegungenPostRequest'
        geraete:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/VorgaengeGeraeteBewegungenPostRequest'
        fotos:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ArbeitsberichteFotosPostRequest'
        zaehler:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/ArbeitsberichteZaehlerPostRequest'
        mitarbeiter:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ArbeitsberichteMitarbeiterPostRequest'
        artikel:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/VorgaengeBerichteArtikelBewegungPostRequest'
        berichtsdaten:
          $ref: '#/components/schemas/ArbeitsberichtBerichtePostRequest'
    WerkstattberichtPostRequest:
      type: object
      required:
        - taetigkeiten
        - mitarbeiter
        - berichtsdaten
      properties:
        taetigkeiten:
          type: array
          items:
            $ref: '#/components/schemas/TaetigkeitenPostRequest'
        mitarbeiter:
          type: array
          items:
            $ref: '#/components/schemas/WerkstattberichteMitarbeiterPostRequest'
        berichtsdaten:
          $ref: '#/components/schemas/WerkstattberichtesBerichtePostRequest'

    VorgaengeBerichtePostRequest:
      type: object
      required:
        - datum
        - de_montage
        - inbetriebnahme
        - pauschal
        - nachweis
        - status
        - text
        - bezeichnung
        - adresse
        - sign
        - status_kunde
      properties:
        datum:
          type: string
          format: date
          example: "2024-12-12"
          default: "2024-12-12"
        de_montage:
          type: boolean
        inbetriebnahme:
          type: boolean
        pauschal:
          type: boolean
        nachweis:
          type: boolean
        status:
          type: string
          enum:
            - Neu
            - Erstellt
            - generiert
        status_kunde:
          type: string
          default: 'vor Ort'
          enum:
            - vor Ort
            - nicht vor Ort
            - Unterschrift verweigert
        text:
          type: string
        bezeichnung:
          type: string
          maxLength: 50
        adresse:
          type: string
          maxLength: 50
        rohdaten:
          type: string
        typ:
          type: string
          enum:
            - Vorgang
            - Motion
            - Report
          example: 'Motion'
        sign:
          type: object
          required:
            - sign_mitarbeiter
            - user
          properties:
            sign_mitarbeiter:
              type: string
              format: base64
            user:
              type: string
              maxLength: 100
              description: 'AD User'
            sign_kunde:
              type: string
            kunde_name:
              type: string
              maxLength: 50
            kunde_email:
              type: string
              maxLength: 50
              description: |
                Validation rule:
                - Email

    ArbeitsberichtBerichtePostRequest:
      type: object
      required:
        - datum
        - de_montage
        - inbetriebnahme
        - pauschal
        - nachweis
        - status
        - text
        - bezeichnung
        - adresse
        - sign
        - status_kunde
      properties:
        datum:
          type: string
          format: date
          example: "2024-12-12"
          default: "2024-12-12"
        de_montage:
          type: boolean
        inbetriebnahme:
          type: boolean
        pauschal:
          type: boolean
        nachweis:
          type: boolean
        status:
          type: string
          enum:
            - Neu
            - Erstellt
            - generiert
        status_kunde:
          type: string
          default: 'vor Ort'
          enum:
            - vor Ort
            - nicht vor Ort
            - Unterschrift verweigert
        text:
          type: string
        bezeichnung:
          type: string
          maxLength: 50
        adresse:
          type: string
          maxLength: 50
        rohdaten:
          type: string
        typ:
          type: string
          enum:
            - Vorgang
            - Motion
            - Report
          example: 'Motion'
        sign:
          type: object
          required:
            - sign_mitarbeiter
            - user
          properties:
            sign_mitarbeiter:
              type: string
              format: base64
            user:
              type: string
              maxLength: 100
              description: 'AD User'
            sign_kunde:
              type: string
              nullable: true
            kunde_name:
              type: string
              maxLength: 50
              nullable: true
            kunde_email:
              type: string
              maxLength: 50
              nullable: true
              description: |
                Validation rule:
                - Email

    WerkstattberichtesBerichtePostRequest:
      type: object
      required:
        - user
        - datum
        - status
        - text
        - sign
      properties:
        user:
          type: string
          maxLength: 100
          description: 'AD User'
        datum:
          type: string
          format: date
          example: "2024-12-12"
          default: "2024-12-12"
        status:
          type: string
          enum:
            - Neu
            - Erstellt
            - generiert
        text:
          type: string
        sign:
          type: object
          required:
            - sign_mitarbeiter
            - user
          properties:
            sign_mitarbeiter:
              type: string
              format: base64
            user:
              type: string
              maxLength: 100
              description: 'AD User'


    VorgaengeBerichteArtikelBewegungPostRequest:
      type: object
      required:
        - bewegungsart
        - menge
        - artikelnummer
      properties:
        bewegungsart:
          type: string
          maxLength: 20
          enum:
            - export
            - import
            - losereport
          description: export=Lieferung, import=Ruecklieferung, losereport=Verlustmeldung
        menge:
          type: integer
          default: 1
        artikelnummer:
          type: string
          maxLength: 20
        bemerkung:
          type: string
          maxLength: 250

    VorgaengeGeraeteBewegungenPostRequest:
      type: object
      required:
        - bewegungsart
        - geraetenummer
      properties:
        bewegungsart:
          type: string
          maxLength: 20
          enum:
            - export
            - import
            - losereport
          description: export=Lieferung, import=Ruecklieferung, losereport=Verlustmeldung
        geraetenummer:
          type: string
          maxLength: 200
          description: 'Bei Verlustmeldungen ohne Geraetenummer bitte eine zuf�llige geraetenummer mit kennung unbekannt generieren'
        bemerkung:
          type: string
          maxLength: 250
    ArbeitsberichteFotosPostRequest:
      type: object
      required:
        - name
        - datei
      properties:
        name:
          type: string
          maxLength: 300
          description: Name der Datei
        datei:
          type: string
          format: base64
          default: iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=
    ArbeitsberichteZaehlerPostRequest:
      type: object
      required:
        - zaehler
        - zaehlerstand
        - adresse
      properties:
        zaehler:
          type: string
          maxLength: 30
          default: 'ein toller zaehler'
        zaehlerstand:
          type: integer
          default: 12321
        adresse:
          type: string
          minLength: 20
          maxLength: 300
          default: 'Finkenweg 2a 98654 Buxdehude'
        foto:
          type: string
          format: base64
          nullable: true
          default: iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNk+A8AAQUBAScY42YAAAAASUVORK5CYII=
          description: |
            Validation rule:
            - Base64
        wandlerfaktor:
          type: string
          maxLength: 100
    ArbeitsberichteMitarbeiterPostRequest:
      type: object
      required:
        - user
        - datum
        - stunden
        - fahrtzeit
        - ueberstunden
        - kilometer
        - vertriebseinheit
      properties:
        user:
          type: string
          maxLength: 100
          description: 'AD-Username'
        datum:
          type: string
          format: date
          default: "2024-12-12"
        stunden:
          type: number
          format: float
        fahrtzeit:
          type: number
          format: float
        ueberstunden:
          type: number
          format: float
        kilometer:
          type: number
        vertriebseinheit:
          type: string
    WerkstattberichteMitarbeiterPostRequest:
      type: object
      required:
        - user
        - vertriebseinheit
      properties:
        user:
          type: string
          maxLength: 100
          description: 'AD-Username'
        vertriebseinheit:
          type: string
    GefahrensbeurteilungenBewegungenPostRequest:
      type: object
      required:
        - gefahren_id
        - gefahren_kategorie_id
      properties:
        gefahren_id:
          type: integer
          maximum: 99999
          x-custom:
            - db_column: 'bvg_gge_org_id'
        gefahren_kategorie_id:
          type: integer
          maximum: 99999
          x-custom:
            - db_column: 'bvg_ggek_orgk_id'
    TaetigkeitenPostRequest:
      type: object
      required:
        - datum
        - taetigkeits_id
        - user
        - vertriebseinheit
        - stunden
        - ueberstunden
        - beschreibung
      properties:
        datum:
          type: string
          format: date
          default: "2024-12-12"
          x-custom:
            - db_column: 'bvg_gge_org_id'
        user:
          type: string
          maxLength: 100
          description: 'AD-Username'
        vertriebseinheit:
          type: string
        taetigkeits_id:
          type: integer
          maximum: 99999
          x-custom:
            - db_column: 'bvg_ggek_orgk_id'
        stunden:
          type: number
          format: float
        ueberstunden:
          type: number
          format: float
        beschreibung:
          type: string
          maxLength: 9999999
    Geraete_ErfassungenPostRequest:
      type: object
      properties:
        code:
          type: string
          description: Code, der mit dem Geraet verknuepft ist.
          x-custom:
            - db_column: 'ge_code'
        typ:
          type: string
          description: barcode oder qrcode
          enum:
            - qrcode
            - barcode
          x-custom:
            - db_column: 'ge_typ'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'ge_user'
    ArbeitsauftraegePatchRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: status des Auftrags
          enum:
            - NEU
            - PLA
            - RUN
            - AUS
            - ABG
            - END
          x-custom:
            - db_column: 'gaa_sva_status'
    VertriebseinheitenItem:
      type: object
      properties:
        vertriebseinheit:
          type: string
          maxLength: 10
          x-custom:
            - db_column: 'gve_orv_ve'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'gve_orv_name1'
        lagerortcode:
          type: integer
          maximum: 999999
          x-custom:
            - db_column: 'gve_orv_nl'

        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gve_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'gve_updated'
    TaetigkeitenItem:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'gt_hrt_id'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'gt_hrt_bezeichnung'
    ArbeitsauftraegeRessource:
      required:
        - auftragsnummer
        - resource
        - erstellt
        - bearbeitet
      type: object
      nullable: false
      x-custom:
        post_route: '/mbmgrace/v2/arbeitsauftraege_ressourcen'
      properties:
        auftragsnummer:
          nullable: false
          type: string
          description: 'Primaerschluessel der Ressource'
          x-custom:
            - db_column: 'gaar_sva_id'
        resource:
          nullable: false
          type: object
          allOf:
            -  $ref: '#/components/schemas/AuftragsRessourceItem'
          x-custom:
            db_column: 'gmi_svr_id'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Arbeitsauftraege_Resourcen'
              property: 'resource_id'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'ggar_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'ggar_updated'
    Arbeitsauftrag:
      type: object
      required:
        - auftragsnummer
        - auftrag_nehmer_vertriebseinheit
        - kurztext
        - status
        - kunden_projekt_bezeichnung
        - kunden_projekt_co_projekt
        - vorgang
        - vorgangs_kunde
        - kundenstamm_name1
        - projekt
        - erstellt
        - bearbeitet
      nullable: false
      x-custom:
        post_route: '/mbmgrace/v2/arbeitsauftraege'
      properties:
        auftragsnummer:
          type: string
          description: 'Primaerschluessel des Arbeitsauftrags'
          x-custom:
             db_column: 'gaa_sva_id'
             primary_key: true
        projektnummer:
          type: integer
          description: ''
          x-custom:
            - db_column: 'gaa_gp_mvkp_projekt'
        auftrag_nehmer_vertriebseinheit:
          type: string
          description: 'Vertriebseinheit'
          x-custom:
            - db_column: 'gaa_sva_ve_nehmer'
        kurztext:
          type: string
          description: 'Kurztext'
          x-custom:
            - db_column: 'gaa_sva_kurztext'
        kunden_projekt_bezeichnung:
          type: string
          nullable: true
          description: 'Kundenprojekt Bezeichnung'
          x-custom:
            - db_column: 'gaa_mvkp_bezeichnung'
        kunden_projekt_co_projekt:
          type: string
          nullable: true
          description: 'Co Projekt'
          x-custom:
            - db_column: 'gaa_mvkp_co_projekt'
        status:
          type: string
          description: 'Status'
          x-custom:
            - db_column: 'gaa_sva_status'
        vorgang:
          type: string
          nullable: true
          description: 'Vorgang'
          x-custom:
            - db_column: 'gaa_mv_vorgang'
        vorgangs_kunde:
          type: string
          nullable: true
          description: 'Vorgang Kunde'
          x-custom:
            - db_column: 'gaa_mv_kunde'
        kundenstamm_name1:
          type: string
          nullable: true
          description: 'Kunde Name'
          x-custom:
            - db_column: 'gaa_mv_kunde'
        projekt:
          nullable: true
          type: object
          allOf:
            -  $ref: '#/components/schemas/ProjektItem'
          x-custom:
            db_column: 'gaa_gp_mvkp_projekt'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Projekte'
              property: 'projektnummer'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gga_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'gga_updated'
    BerichtVorgang:
      type: object
      nullable: false
      x-custom:
        post_route: '/mbmgrace/v2/vorgange/berichte'
      properties:
        berichtsnummer:
          type: integer
          description: 'Primaerschluessel des Vorgangsberichts'
          x-custom:
            - db_column: 'bv_berichtsnummer'

        vorgang:
          type: object
          allOf:
            -  $ref: '#/components/schemas/VorgangItem'
          x-custom:
              db_column: 'bv_gv_mv_vorgang'
              foreign_key:
                reference_table: 'Webservices.mbmgrace.Grace_Vorgaenge'
                property: 'vorgang'
        status:
          type: string
          x-custom:
            - db_column: 'bv_status'
        datum:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bv_datum'
        pauschal:
          type: integer
          maximum: 1
          x-custom:
            - db_column: 'bv_pauschal'
        nachweis:
          type: integer
          maximum: 1
          x-custom:
            - db_column: 'bv_nachweis'
        bezeichnung:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_bezeichnung'
        addresse:
          type: string
          maxLength: 50
          x-custom:
            - db_column: 'bv_adresse'
        text:
          type: string
          x-custom:
            - db_column: 'bv_text'
        sign_mitarbeiter:
          type: string
          x-custom:
            - db_column: 'bv_sign_mitarbeiter'
        sign_kunde:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_sign_kunde'
        sign_kunde_name:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_sign_kunde_name'
        sign_kunde_email:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_sign_kunde_email'
        rohdaten:
          type: string
          nullable: true
          x-custom:
            - db_column: 'bv_rohdaten'
        typ:
          type: string
          maxLength: 50
          enum:
            - Motion
            - Report
            - Service
            - Project
            - Arbeitsbericht
          x-custom:
            - db_column: 'bv_typ'
        ersteller:
          type: string
          maxLength: 100
          x-custom:
            - db_column: 'bv_created_by'
        bearbeiter:
          type: string
          nullable: true
          maxLength: 100
          x-custom:
            - db_column: 'bv_updated_by'
        auftragsnummer:
          nullable: true
          type: integer
          x-custom:
            - db_column: 'bv_sva_id'
        status_kunde:
          type: string
          maxLength: 30
          x-custom:
            - db_column: 'bv_status_kunde'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'bv_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'bv_updated'
    VorgaengeItem:
      type: object
      properties:
        vorgang:
          type: string
          description: 'Primaerschluessel des Arbeitsauftrags'
          x-custom:
            - db_column: 'gv_mv_vorgang'
        kunde:
          type: string
          description: 'Kunde'
          x-custom:
            - db_column: 'gv_mv_kunde'
        name1:
          type: string
          description: 'Kurztext'
          x-custom:
            - db_column: 'gv_kd_name1'
        vertriebseinheit:
          type: string
          description: 'vertriebseinheit'
          x-custom:
            - db_column: 'gv_or_ve'
        projekt:
          type: integer
          nullable: true
          description: 'projekt'
          x-custom:
            - db_column: 'gv_mvkp_projekt'
        baustelle:
          type: string
          nullable: true
          description: 'baustelle'
          x-custom:
            - db_column: 'gv_baustelle'
        plz:
          type: string
          nullable: true
          description: 'plz'
          x-custom:
            - db_column: 'gv_mva_plz'
        ort:
          type: string
          nullable: true
          description: 'ort'
          x-custom:
            - db_column: 'gv_mva_ort'
        co_projekt:
          type: integer
          nullable: true
          description: 'ort'
          x-custom:
            - db_column: 'gv_mvkp_co_projekt'
        trans_stat:
          type: string
          description: 'trans_stat'
          enum:
            - NEU
            - PLA
            - RUN
            - AUS
            - ABG
            - END
          x-custom:
            - db_column: 'gv_mgv_trans_stat'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gv_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'gv_updated'

    GeraetItemSimple:
      type: object
      properties:
        geraetenummer:
          type: string
          maxLength: 99999999
          x-custom:
            db_column: 'gge_arge_nr'
            primary_key: true
        bezeichnung1:
          type: string
          nullable: true
          x-custom:
            - db_column: 'gge_arge_bez1'
        bezeichnung2:
          type: string
          nullable: true
          x-custom:
            - db_column: 'gge_arge_bez2'
        serial_nummer:
          type: string
          nullable: true
          maxLength: 200
          x-custom:
            - db_column: 'gge_arge_serial'
        artikel:
          type: string
          maxLength: 200
          x-custom:
            - db_column: 'gge_arge_artikel'
            - reference_table: 'Webservices.mbmgrace.Grace_Artikel'
            - primary_key: 'gar_ar_artikel'
        status:
          type: integer
          maximum: 1000
          x-custom:
            - db_column: 'gge_arge_status'
        lager:
          type: integer
          maximum: 99999999
          x-custom:
            - db_column: 'gge_arge_lager'
        vertrag:
          type: string
          maxLength: 100
          x-custom:
            - db_column: 'gge_arge_vertrag'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gge_created'
        bearbeitet:
          type: string
          nullable: true
          format: sql-date-time
          x-custom:
            - db_column: 'gge_updated'
    GeraetItem:
      type: object
      required:
        - geraetenummer
        - bezeichnung1
        - bezeichnung2
        - serial_nummer
        - artikel
        - status
        - lager
        - vertrag
        - geraete_erfassungen
        - erstellt
        - bearbeitet
      properties:
        geraetenummer:
          type: string
          maxLength: 99999999
          x-custom:
            - db_column: 'gge_arge_nr'
              primary_key: true
        bezeichnung1:
          type: string
          nullable: true
          maxLength: 40
          x-custom:
            - db_column: 'gge_arge_bez1'
        bezeichnung2:
          type: string
          nullable: true
          maxLength: 40
          x-custom:
            - db_column: 'gge_arge_bez2'
        serial_nummer:
          type: string
          nullable: true
          maxLength: 25
          x-custom:
            - db_column: 'gge_arge_serial'
        artikel:
          type: string
          maxLength: 25
          x-custom:
            - db_column: 'gge_arge_artikel'
        status:
          type: integer
          maximum: 1000
          x-custom:
            - db_column: 'gge_arge_status'
        lager:
          type: integer
          maximum: 99999999
          x-custom:
            - db_column: 'gge_arge_lager'
        vertrag:
          type: string
          maxLength: 100
          x-custom:
            - db_column: 'gge_arge_vertrag'
        geraete_erfassungen:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Geraete_Erfassungen'
          x-custom:
            db_column: 'ge_gge_arge_nr'
            foreign_key:
                reference_table: 'Webservices.mbmgrace.Grace_Geraete_Erfassungen'
                property: 'geraetenummer'

        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gge_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gge_updated'
    Geraete_Erfassungen:
      type: object
      properties:
        id:
          type: integer
          description: 'Primaerschluessel der Erfassung'
          x-custom:
            - db_column: 'ge_id'
            - primary_key: true
        geraetenummer:
          type: string
          description: 'Geraetenummer'
          maxLength: 25
          x-custom:
            - db_column: 'ge_gge_arge_nr'
            - reference_table: 'Webservices.mbmgrace.Grace_Geraete_Erfassungen'
            - primary_key: 'ge_gge_arge_nr'
        code:
          type: string
          description: 'Code (qr oder Barcode)'
          x-custom:
            - db_column: 'ge_code'
        typ:
          type: string
          description: 'Typ des codes. QR oder Barcode'
          default: 'qrcode'
          x-custom:
            - db_column: 'ge_typ'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'ge_user'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'ge_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'ge_updated'
    GefahrenKategorienGetResponse:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_gefahr_id'
            - reference_table: 'Webservices.mbmgrace.Grace_Gefahr'
            - primary_key: true
        gefahren_id:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_id'
            - reference_table: 'Webservices.mbmgrace.Grace_Gefahren_Kategorien'
            - primary_key: true
        bezeichnung:
          type: string
          x-custom:
            - db_column: 'ggek_orgk_bezeichnung'
        sort:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_sort'
        aktiv:
          type: integer
          x-custom:
            - db_column: 'ggek_orgk_aktiv'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'ggek_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'ggek_created'
    GefahrenGefahrenGetResponse:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'gge_org_id'
            - primary_key: 'gge_org_id'
        bezeichnung:
          type: string
          x-custom:
            - db_column: 'gge_org_bezeichnung'
        sort:
          type: integer
          x-custom:
            - db_column: 'gge_org_sort'
        aktiv:
          type: integer
          x-custom:
            - db_column: 'gge_org_aktiv'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gge_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gge_updated'
    AuftragsRessourceItem:
      required:
        - auftragsnummer
        - resource_id
        - nummer
        - workday_id
        - nachname
        - vorname
        - email
        - vertriebseinheit
        - funktion
        - user
        - erstellt
        - bearbeitet
      type: object
      properties:
        auftragsnummer:
          type: integer
          description: 'Primaerschluessel des auftrags'
          x-custom:
            db_column: 'gaar_sva_id'
            foreign_key:
              reference_table: 'Webservices.mbmgrace.Grace_Arbeitsauftraege'
              property: 'auftragsnummer'
        resource_id:
          type: integer
          description: 'Primaerschluessel der Ressource'
          x-custom:
            db_column: 'gmi_svr_id'
            primary_key: true
        nummer:
          type: integer
          description: 'Persnr'
          x-custom:
            - db_column: 'gmi_orm_persnr'
        workday_id:
          type: string
          description: 'Workday ID'
          maxLength: 99999999
          x-custom:
            - db_column: 'gmi_orm_workday_id'
        nachname:
          type: string
          description: 'Nachname'
          maxLength: 50
          x-custom:
            - db_column: 'gmi_orm_nachname'
        vorname:
          type: string
          description: 'Vorname'
          maxLength: 50
          nullable: true
          x-custom:
            - db_column: 'gmi_orm_vorname'
        email:
          type: string
          description: 'Email'
          maxLength: 200
          nullable: true
          format: email
          x-custom:
            - db_column: 'gmi_orm_mail'
        vertriebseinheit:
          type: string
          description: 'Vertriebseinheit'
          maxLength: 10
          x-custom:
            - db_column: 'gmi_gve_orv_ve'
        funktion:
          type: string
          description: 'Funktion'
          maxLength: 100
          x-custom:
            - db_column: 'gmi_orfk_funktion'

        user:
          type: string
          description: 'User AD'
          maxLength: 100
          x-custom:
            - db_column: 'gmi_orm_usr_ad'

        erstellt:
          type: string
          nullable: false
          format: sql-date-time
          x-custom:
            - db_column: 'gmi_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gmi_updated'
    ProjektItem:
      type: object
      properties:
        projektnummer:
          type: integer
          description: 'Primaerschluessel des Projektes'
          x-custom:
            - db_column: 'gp_mvkp_projekt'
            - reference_table: 'Webservices.mbmgrace.Grace_Projekte'
            - primary_key: 'gp_mvkp_projekt'
        bezeichnung:
          type: string
          description: 'Bezeichnung'
          maxLength: 99999999
          x-custom:
            - db_column: 'gp_mvkp_bezeichnung'
        beschreibung:
          type: string
          nullable: true
          description: 'Beschreibung'
          x-custom:
            - db_column: 'gp_mvkp_beschreibung'
        betreuer:
          type: string
          description: 'Betreuer'
          maxLength: 999
          nullable: true
          x-custom:
            - db_column: 'gp_mvkp_betreuer'
        aktiv:
          type: integer
          description: 'Aktiv'
          nullable: true
          x-custom:
            - db_column: 'gp_mvkp_aktiv'
        erstellt:
          type: string
          nullable: false
          format: sql-date-time
          x-custom:
            - db_column: 'gp_updated'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gp_created'
    VorgangItem:
      type: object
      properties:
        vorgang:
          type: string
          description: 'Primaerschluessel des Vorgangs'
          x-custom:
            db_column: 'gv_mv_vorgang'
            primary_key: true
        kunde:
          type: string
          description: 'kunde'
          maxLength: 99999999
          x-custom:
            - db_column: 'gv_mv_kunde'
        name1:
          type: string
          description: 'name1'
          x-custom:
            - db_column: 'gv_kd_name1'
        vertriebseinheit:
          type: string
          description: 'Vertriebseinheit'
          maxLength: 9999
          x-custom:
            - db_column: 'gv_or_ve'
        projekt:
          type: integer
          description: 'projekt'
          nullable: true
          x-custom:
            - db_column: 'gv_mvkp_projekt'
        baustelle:
          type: string
          maxLength: 50
          nullable: true
          description: 'baustelle'
          x-custom:
            - db_column: 'gv_baustelle'
        plz:
          type: string
          maxLength: 10
          description: 'plz'
          nullable: true
          x-custom:
            - db_column: 'gv_mva_plz'
        ort:
          type: string
          maxLength: 50
          description: 'ort'
          nullable: true
          x-custom:
            - db_column: 'gv_mva_ort'
        co_projekt:
          type: integer
          maximum: 99999999
          description: 'co_projekt'
          nullable: true
          x-custom:
            - db_column: 'gv_mvkp_co_projekt'
        trans_stat:
          type: string
          description: 'trans_stat'
          nullable: true
          x-custom:
            - db_column: 'gv_mgv_trans_stat'
        erstellt:
          type: string
          nullable: false
          format: sql-date-time
          x-custom:
            - db_column: 'gv_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gv_created'
    Geraete_ErfassungenItem:
      type: object
      required:
        - id
        - geraetenummer
        - code
        - typ
        - user
      properties:
        id:
          type: integer
          description: 'Primaerschluessel der Erfassung'
          x-custom:
            db_column: 'ge_id'
            primary_key: true
        geraetenummer:
          type: string
          description: 'Geraetenummer'
          maxLength: 25
          x-custom:
            db_column: 'ge_gge_arge_nr'
            foreign_key:
                reference_table: 'Webservices.mbmgrace.Geraet'
                property: 'geraetenummer'
        code:
          type: string
          description: 'Code (qr oder Barcode)'
          x-custom:
            - db_column: 'ge_code'
        typ:
          type: string
          description: 'Typ des codes. QR oder Barcode'
          default: 'qrcode'
          enum:
            - qrcode
            - barcode
          x-custom:
            - db_column: 'ge_typ'
        user:
          type: string
          description: AD Username des eingeloggten Benutzers
          maxLength: 100
          x-custom:
            - db_column: 'ge_user'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'ge_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'ge_updated'
    DeleteGeraeteErfassungenResponse:
      type: object
      required:
        - success
      properties:
        success:
          type: boolean
          description: 'Status der Löschung'

    MitarbeiterGetResponse:
      type: object
      properties:
        id:
          type: integer
          x-custom:
            - db_column: 'gmi_id'
        persnr:
          type: integer
          x-custom:
            - db_column: 'gmi_orm_persnr'
        workday_id:
          type: string
          x-custom:
            - db_column: 'gmi_orm_workday_id'
        vorname:
          type: string
          x-custom:
            - db_column: 'gmi_orm_vorname'
        nachname:
          type: string
          x-custom:
            - db_column: 'gmi_orm_nachname'
        email:
          nullable: true
          type: string
          x-custom:
            - db_column: 'gmi_orm_mail'
        vertriebseinheit:
          type: string
          x-custom:
            - db_column: 'gmi_gve_orv_ve'
        funktion:
          type: string
          x-custom:
            - db_column: 'gmi_orfk_funktion'
        svr_id:
          type: integer
          x-custom:
            - db_column: 'gmi_svr_id'
        user_ad:
          type: string
          x-custom:
            - db_column: 'gmi_orm_usr_ad'
        erstellt:
          type: string
          format: sql-date-time
          x-custom:
            - db_column: 'gmi_created'
        bearbeitet:
          type: string
          format: sql-date-time
          nullable: true
          x-custom:
            - db_column: 'gmi_updated'
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    AuthTokenRequest:
      type: object
      properties:
        _username:
          type: string
          minLength: 4
          maxLength: 200
        _password:
          type: string
          format: password
          minLength: 4
          maxLength: 200

    AuthTokenResponse:
      type: object
      properties:
        access_token:
          type: string
        expires_in:
          type: string
        refresh_expires_in:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        not_before_policy:
          type: string
        session_state:
          type: string
        scope:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apikeyAuth: # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cfvookie"
      name: apikey
security:
  - BearerAuth: []
  - apikeyAuth: []
x-original-swagger-version: "3.0.3"
