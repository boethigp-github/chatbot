openapi: 3.0.0
info:
    title: Hudini - Rest API
    version: 1.0.0
    description: API for a Flask application with prompt management and text generation capabilities

servers:
    - url: http://localhost:5000

paths:
    /:
        get:
            summary: Home page
            responses:
                '200':
                    description: Renders the index.html template

    /ping:
        get:
            summary: Ping the server
            responses:
                '200':
                    description: Server status stream
                    content:
                        text/event-stream:
                            schema:
                                type: string

    /get_models:
        get:
            summary: Get available models
            responses:
                '200':
                    description: List of available local and OpenAI models
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    local_models:
                                        type: array
                                        items:
                                            type: string
                                    openai_models:
                                        type: array
                                        items:
                                            type: string

    /generate:
        post:
            summary: Set current prompt and model
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                prompt:
                                    type: string
                                model:
                                    type: string
            responses:
                '200':
                    description: Prompt and model received successfully
                '400':
                    description: No prompt or model provided

    /stream:
        get:
            summary: Stream generated text
            responses:
                '200':
                    description: Stream of generated text
                    content:
                        text/event-stream:
                            schema:
                                $ref: '#/components/schemas/StreamResponse'
                '400':
                    description: No prompt or model available for streaming

    /load_prompts:
        get:
            summary: Load saved prompts
            responses:
                '200':
                    description: List of saved prompts
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: object
                                    properties:
                                        id:
                                            type: string
                                        prompt:
                                            type: string
                                        timestamp:
                                            type: string

    /save_prompt:
        post:
            summary: Save a new prompt
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                prompt:
                                    type: string
                                    description: The prompt to be saved
                            required:
                                - prompt
                            additionalProperties: false
            responses:
                '200':
                    description: Prompt saved successfully
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    status:
                                        type: string
                                    id:
                                        type: string
                '400':
                    description: Invalid request
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string
                '500':
                    description: Server error
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    error:
                                        type: string

    /delete_prompt/{id}:
        delete:
            summary: Delete a saved prompt
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Prompt deleted successfully
                '404':
                    description: Prompt not found

    /swagger.yaml:
        get:
            summary: Get Swagger YAML
            description: Retrieve the Swagger YAML file describing the API
            responses:
                '200':
                    description: Successful response
                    content:
                        application/x-yaml:
                            schema:
                                type: string

components:
    schemas:
        StreamResponse:
            type: object
            properties:
                status:
                    type: string
                    description: Status of the stream (e.g., start, data, end, error)
                    example: "data"
                model:
                    type: string
                    description: The name of the model being used
                    example: "gpt-3"
                message:
                    type: string
                    description: Additional information or error messages
                    example: "Generation failed due to an error"
                token:
                    type: string
                    description: The generated token or word from the model
                    example: "Hello"
                user:
                    type: string
                    description: The user associated with the request
                    example: "johndoe"
                timestamp:
                    type: string
                    description: The time at which the event occurred
                    format: date-time
                    example: "2024-08-18 15:34:56"
                prompt:
                    type: string
                    description: The prompt that was used for generation
                    example: "Tell me a short joke"
                prompt_id:
                    type: string
                    format: uuid
                    description: The prompt that was used for generation

